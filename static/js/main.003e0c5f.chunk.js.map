{"version":3,"sources":["component/menuApi.js","component/MenuCard.js","component/Navbar.js","component/Resturant.js","App.js","index.js"],"names":["Menu","id","image","name","category","price","description","MenuCard","menuData","className","map","curElem","src","alt","navbar","filterItem","menuList","onClick","uniqueList","Set","console","log","Resturant","useState","setMenuData","Navbar","updatedList","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAqFeA,G,MArFF,CACX,CACEC,GAAI,EACJC,MAAO,mBACPC,KAAM,QACNC,SAAU,YACVC,MAAO,WACPC,YACE,2NAGJ,CACEL,GAAI,EACJC,MAAO,yBACPC,KAAM,eACNC,SAAU,UACVC,MAAO,WACPC,YACE,+LAEJ,CACEL,GAAI,EACJC,MAAO,kBACPC,KAAM,OACNC,SAAU,YACVC,MAAO,WACPC,YACE,+LAEJ,CACEL,GAAI,EACJC,MAAO,sBACPC,KAAM,QACNC,SAAU,QACVC,MAAO,WACPC,YACE,+LAEJ,CACEL,GAAI,EACJC,MAAO,sBACPC,KAAM,QACNC,SAAU,UACVC,MAAO,WACPC,YACE,+LAEJ,CACEL,GAAI,EACJC,MAAO,4BACPC,KAAM,gBACNC,SAAU,SACVC,MAAO,YACPC,YACE,+LAEJ,CACEL,GAAI,EACJC,MAAO,sBACPC,KAAM,SACNC,SAAU,SACVC,MAAO,WACPC,YACE,+LAEJ,CACEL,GAAI,EACJC,MAAO,0BACPC,KAAM,aACNC,SAAU,QACVC,MAAO,WACPC,YACE,+LAEJ,CACEL,GAAI,EACJC,MAAO,uBACPC,KAAM,SACNC,SAAU,UACVC,MAAO,WACPC,YACE,iM,OCrCSC,EAtCE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAGlB,OACE,mCACE,yBAASC,UAAU,wBAAnB,SACGD,EAASE,KAAI,SAACC,GACb,IAAQV,EAA2CU,EAA3CV,GAAIE,EAAuCQ,EAAvCR,KAAMC,EAAiCO,EAAjCP,SAAUF,EAAuBS,EAAvBT,MAAOI,EAAgBK,EAAhBL,YAInC,OACE,mCACE,qBAAKG,UAAU,iBAAf,SAEE,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,YAAf,UACE,sBAAMA,UAAU,iCAAhB,SAAkDR,IAClD,uBAAMQ,UAAU,qBAAhB,cAAuCL,KACvC,qBAAIK,UAAU,aAAd,cAA6BN,EAA7B,OACA,sBAAMM,UAAU,0BAAhB,SACGH,IAEH,qBAAKG,UAAU,YAAf,qBAEF,qBAAKG,IAAKV,EAAOW,IAAI,SAASJ,UAAU,eAExC,sBAAMA,UAAU,mBAAhB,2BAdiCR,aCgBpCa,EA9BA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAC5B,OACE,mCACE,qBAAKP,UAAU,SAAf,SACE,qBAAKA,UAAU,YAAf,SAGGO,EAASN,KAAI,SAACC,GACb,OACE,wBACEF,UAAU,kBACVQ,QAAS,kBAAMF,EAAWJ,IAF5B,SAOGA,cCdXO,EAAU,sBACX,IAAIC,IACLnB,EAAKU,KAAI,SAACC,GACR,OAAOA,EAAQP,cAHL,CAOd,QAMFgB,QAAQC,IAAIH,GAEZ,IAyCeI,EAzCG,WAIhB,MAAgCC,mBAASvB,GAAzC,mBAAOQ,EAAP,KAAiBgB,EAAjB,KACA,EAAgCD,mBAASL,GAAzC,mBAAOF,EAAP,UA4BA,OACE,qCACE,cAACS,EAAD,CAAQV,WAvBO,SAACX,GAGlB,GAAiB,QAAbA,EAAJ,CAQA,IAAMsB,EAAc1B,EAAK2B,QAAO,SAAChB,GAC/B,OAAOA,EAAQP,WAAaA,KAG9BoB,EAAYE,QAXVF,EAAYxB,IAmBoBgB,SAAUA,IAC1C,cAAC,EAAD,CAAUR,SAAUA,QC/CXoB,EARH,WACV,OACE,mCACE,cAAC,EAAD,OCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.003e0c5f.chunk.js","sourcesContent":["const Menu = [\n  {\n    id: 1,\n    image: \"images/maggi.jpg\",\n    name: \"maggi\",\n    category: \"breakfast\",\n    price: \"12₹\",\n    description:\n      \"I love Maggi realy oo yues  Lorem ipsum dolor sit amet consectetur adipisicing elit. Blanditiis, at consectetur totam voluptatibus quibusdam iusto. Accusamus quas, soluta ipsam autem eius necessitatibus fugiat in . \",\n  },\n\n  {\n    id: 2,\n    image: \"images/allupakoida.jpg\",\n    name: \"allu pakoida\",\n    category: \"evening\",\n    price: \"20₹\",\n    description:\n      \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Blanditiis, at consectetur totam voluptatibus quibusdam iusto. Accusamus quas, soluta ipsam autem eius necessitatibus fugiat in . \",\n  },\n  {\n    id: 3,\n    image: \"images/corn.jpg\",\n    name: \"corn\",\n    category: \"breakfast\",\n    price: \"10₹\",\n    description:\n      \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Blanditiis, at consectetur totam voluptatibus quibusdam iusto. Accusamus quas, soluta ipsam autem eius necessitatibus fugiat in . \",\n  },\n  {\n    id: 4,\n    image: \"../images/chola.jpg\",\n    name: \"chola\",\n    category: \"lunch\",\n    price: \"50₹\",\n    description:\n      \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Blanditiis, at consectetur totam voluptatibus quibusdam iusto. Accusamus quas, soluta ipsam autem eius necessitatibus fugiat in . \",\n  },\n  {\n    id: 5,\n    image: \"../images/pizza.jpg\",\n    name: \"pizza\",\n    category: \"evening\",\n    price: \"80₹\",\n    description:\n      \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Blanditiis, at consectetur totam voluptatibus quibusdam iusto. Accusamus quas, soluta ipsam autem eius necessitatibus fugiat in . \",\n  },\n  {\n    id: 6,\n    image: \"../images/nonvegthali.jpg\",\n    name: \"Non-Veg Thali\",\n    category: \"dinner\",\n    price: \"180₹\",\n    description:\n      \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Blanditiis, at consectetur totam voluptatibus quibusdam iusto. Accusamus quas, soluta ipsam autem eius necessitatibus fugiat in . \",\n  },\n  {\n    id: 7,\n    image: \"../images/sweet.jpg\",\n    name: \"Sweets\",\n    category: \"dinner\",\n    price: \"60₹\",\n    description:\n      \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Blanditiis, at consectetur totam voluptatibus quibusdam iusto. Accusamus quas, soluta ipsam autem eius necessitatibus fugiat in . \",\n  },\n  {\n    id: 8,\n    image: \"../images/rajmarice.jpg\",\n    name: \"Rajma Rice\",\n    category: \"lunch\",\n    price: \"60₹\",\n    description:\n      \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Blanditiis, at consectetur totam voluptatibus quibusdam iusto. Accusamus quas, soluta ipsam autem eius necessitatibus fugiat in . \",\n  },\n  {\n    id: 9,\n    image: \"../images/samosa.jpg\",\n    name: \"samaso\",\n    category: \"evening\",\n    price: \"10₹\",\n    description:\n      \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Blanditiis, at consectetur totam voluptatibus quibusdam iusto. Accusamus quas, soluta ipsam autem eius necessitatibus fugiat in . \",\n  },\n];\n\nexport default Menu;\n","import React from \"react\";\n\n// Created a Separated Component for MenuCard.\n// We need to pass the paramter as an object -> ALSO, KNOWN AS PROBS\n// But make sure you USE THE SAME NAME, WHERE YOU HAVE PASSED THEM FIRST\n// SO, HERE THE ENTIRE DATA FROM THE API IN MENUCARD.\nconst MenuCard = ({ menuData }) => {\n  //   console.log(menuData);\n\n  return (\n    <>\n      <section className=\"main-card--cointainer\">\n        {menuData.map((curElem) => {\n          const { id, name, category, image, description } = curElem;\n          // Without using curElem.id , curElem.name ... etc multiple times.\n          // Just DISTRUCK it and use only the naming convention, what you need from that API.\n\n          return (\n            <>\n              <div className=\"card-container\" key={id}>\n                {/* As I am using the field from API, I need an KEY to access them */}\n                <div className=\"card \">\n                  <div className=\"card-body\">\n                    <span className=\"card-number card-circle subtle\">{id}</span>\n                    <span className=\"card-author subtle\"> {category}</span>\n                    <h2 className=\"card-title\"> {name} </h2>\n                    <span className=\"card-description subtle\">\n                      {description}\n                    </span>\n                    <div className=\"card-read\">Read</div>\n                  </div>\n                  <img src={image} alt=\"images\" className=\"card-media\" />\n                  {/*  YOU CAN SEE ABOVE, I'M JUST USING THE NAMING CONVENTION, TO GET THE VALUES FROM THE API, */}\n                  <span className=\"card-tag  subtle\">Order Now</span>\n                </div>\n              </div>\n            </>\n          );\n        })}\n      </section>\n    </>\n  );\n};\n\nexport default MenuCard;\n","import React from \"react\";\n\n// Created a Separated Component for NavBar.\n// We need to pass the paramters as an object  -> ALSO, KNOWN AS PROBS\n// But make sure you USE THE SAME NAME, WHERE YOU HAVE PASSED THEM FIRST.\nconst navbar = ({ filterItem, menuList }) => {\n  return (\n    <>\n      <nav className=\"navbar\">\n        <div className=\"btn-group\">\n          {/* As we have a RULE: DON'T REPEAT THE CODE */}\n          {/* SO, we are mapping through the entire \"menuList\" which contain all UNIQUE Category using MAP and curElem stores all the datas. */}\n          {menuList.map((curElem) => {\n            return (\n              <button\n                className=\"btn-group__item\"\n                onClick={() => filterItem(curElem)}\n                // Always use Arrow function to call different function for not future complications.\n                // So, just passing the category passed during clicking the button, to the filterItem.\n                // So, that we can get ONLY those times recipes.\n              >\n                {curElem}\n                {/* And I'm PRINTING time on my screen by iterating through the menuList*/}\n                {/* Which contains ALL the UNIQUE categories */}\n\n                {/* ALWAYS USE CURLY BRACES TO CALL / WRITE JS IN HTML */}\n              </button>\n            );\n          })}\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default navbar;\n","import React, { useState } from \"react\";\nimport \"./style.css\";\nimport Menu from \"./menuApi.js\";\nimport MenuCard from \"./MenuCard\";\nimport Navbar from \"./Navbar\";\n// Here we are importing everything we need. Because Resturant is our main component for the project.\n\nconst uniqueList = [\n  ...new Set(\n    Menu.map((curElem) => {\n      return curElem.category;\n    })\n    // ... is a \"Spread operator\" which says that. Keep the data which were there in the previous state.\n  ),\n  \"All\",\n];\n// Here we are making a list or array you can say. Which is storing all the UNIQUE category of the recipes we have.\n// So, the reason I'm using SET and map function is used to iterate through entire API and get the category stored in curElem and returned.\n// \"All\" is added because we don't have any category named \"All\" in the API. SO, I needed to create it Separated.\n\nconsole.log(uniqueList);\n\nconst Resturant = () => {\n  // HOOKS -> useState is to store the data for us to future operations. And it should be declared just after the component declaration.\n  // It returns two things. 1 -> 1st parameter which stores all the Values from the API, 2 -> 2nd parameter which will be used if amy modification is required in the datadset.\n  // In the useState(parameter) the parameter passed, is the import name we can used for getting that component to this file / array of datas.\n  const [menuData, setMenuData] = useState(Menu);\n  const [menuList, setMenuList] = useState(uniqueList);\n\n  // As we have created Separate blocks for each time recipes.\n  // So, we need to filter the data using the category.\n  // SO, made a new component filterItem() which is taking the category as an argument\n  // Because we Don’t havr to REPEAT the code for all the times of the recipes.\n\n  const filterItem = (category) => {\n    // A Separate if condition for \"All\" because we don't have any category named \"All\" in the API.\n    // So, if the category is ALL, just set the setMenuData to the entire dataset that is Menu(look the import part) and return.\n    if (category === \"All\") {\n      setMenuData(Menu);\n      return;\n    }\n\n    // Creating a variable which is storing all the data to there specific category.\n    // Using the filter function of JS and curElem will have all the data and we are comparing the category passed as a parameter.\n    // If it is EQUAL to the API we have then, just update the setMenuData with the new updatedList.\n    const updatedList = Menu.filter((curElem) => {\n      return curElem.category === category;\n    });\n\n    setMenuData(updatedList);\n  };\n\n  // Lastlty, we havr to return ONE TAG, containing everything.\n  // SO, in <> we are first passing the filterItem as an ATTRIBUTE to the NavBar component with the menuList which has all UNIQUE category.\n  // And menuData which has ALL the datas from API to create MenuCard.\n  return (\n    <>\n      <Navbar filterItem={filterItem} menuList={menuList} />\n      <MenuCard menuData={menuData} />\n    </>\n  );\n};\n\nexport default Resturant;\n// We use EXPORT so, that we can IMPORT this component to different component as well.\n","import React from \"react\";\nimport Resturant from \"./component/Resturant\";\n\nconst App = () => {\n  return (\n    <>\n      <Resturant />\n    </>\n  );\n};\n\nexport default App;\n\n// There are two ways to declare a Component:\n// 1. Arrow function\n// const Karan = () => {}\n\n// 2. Just a JS funtion\n// function Karan () {}\n\n// We have to ALWAYS RETURN 1 Tag consisting everthing.\n// The Best to have is <React.Fragment> or  Simply <>.\n\n// Also you can call different component in the parent component called Nested component.\n// To call a component just add, <Name of the component/> in the tag. Same as line 7.\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// Index.js is the Main JS file, where we call the main component name App.\n// First we need to import the component we want to display like line 3.\n// ReactDOM.render means what to render on the page.\n// To call a component just add, <Name of the component/> in the tag.\n\n// Also index.html is the main file, where everything is displayed.\n// So, where the <App /> will display. Is where the \"Tag which has an id of root\".\n"],"sourceRoot":""}